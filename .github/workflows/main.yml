name: Build project

on:
  repository_dispatch:
    types: [build-request]
  workflow_dispatch:
    inputs:
      targetPlatform:
        description: 'Optional specific platform to build (leave empty for all)'
        required: false
        default: 'all'
        type: choice
        options:
        - all
        - StandaloneOSX
        - StandaloneWindows
        - StandaloneWindows64
        - StandaloneLinux64
        - iOS
        - Android
        - WebGL

jobs:
  buildForAllSupportedPlatforms:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        targetPlatform: ${{ fromJSON(needs.setup.outputs.platforms) }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          lfs: true
      - uses: actions/cache@v3
        with:
          path: Library
          key: Library-${{ matrix.targetPlatform }}
          restore-keys: Library-
      - if: matrix.targetPlatform == 'Android'
        uses: jlumbroso/free-disk-space@v1.3.1
      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
      - uses: actions/upload-artifact@v4
        with:
          name: Build-${{ matrix.targetPlatform }}
          path: build/${{ matrix.targetPlatform }}

  setup:
    runs-on: ubuntu-latest
    outputs:
      platforms: ${{ steps.set-platforms.outputs.platforms }}
    steps:
      - id: set-platforms
        run: |
          if [ "${{ github.event.inputs.targetPlatform }}" == "all" ]; then
            echo 'platforms=["StandaloneOSX","StandaloneWindows","StandaloneWindows64","StandaloneLinux64","iOS","Android","WebGL"]' >> $GITHUB_OUTPUT
          else
            echo 'platforms=["${{ github.event.inputs.targetPlatform }}"]' >> $GITHUB_OUTPUT
          fi